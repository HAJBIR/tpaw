{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/meteo-detail/meteo-detail.component.css","webpack:///./src/app/meteo-detail/meteo-detail.component.html","webpack:///./src/app/meteo-detail/meteo-detail.component.ts","webpack:///./src/app/meteo/meteo.component.css","webpack:///./src/app/meteo/meteo.component.html","webpack:///./src/app/meteo/meteo.component.ts","webpack:///./src/app/meteoItem.ts","webpack:///./src/app/services/meteo.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"h1 {\\r\\n    background: linear-gradient(141deg, #0fb8ad 0%, #1fc8db 51%, #2cb5e8 75%);\\r\\n    color: white;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    font-style: italic;\\r\\n    text-align: center;\\r\\n    }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx5RUFBeUU7SUFDekUsWUFBWTtJQUNaLHlDQUF5QztJQUN6QyxrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMSB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTQxZGVnLCAjMGZiOGFkIDAlLCAjMWZjOGRiIDUxJSwgIzJjYjVlOCA3NSUpO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9Il19 */\"","module.exports = \"<!-- app.component.html -->\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n  <!-- menu du haut de page -->\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Météo avec Angular</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\"\\r\\n      aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item active\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Accueil\\r\\n            <span class=\\\"sr-only\\\">(current)</span>\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n  <!-- fin : menu du haut de page -->\\r\\n\\r\\n  <!--The content below is only a placeholder and can be replaced.-->\\r\\n  <div>\\r\\n\\r\\n\\r\\n<h1>\\r\\n  Welcome to {{ title }}!\\r\\n</h1>\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n</div>\\r\\n\\r\\n</div>\"","﻿import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = '⛅ Weather webapp ';\r\n}\r\n","import { FormsModule } from '@angular/forms'; // <--  Ajouter la référence ici\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MeteoComponent } from './meteo/meteo.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MeteoDetailComponent } from './meteo-detail/meteo-detail.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { \r\n    path: 'meteo/:name',  // la page  affichant la météo prendra comme paramètre 'name'\r\n    component: MeteoDetailComponent }, // Ce component fera l'appel AJAX et afficher les données reçues par openWeatherMap\r\n  {\r\n    path: '', // un chemin vide renverra vers '/'\r\n    redirectTo: '/',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: '', // la page principale utilisera le component suivant\r\n    component: MeteoComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MeteoComponent,\r\n    MeteoDetailComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      { enableTracing: true } // <-- debugging purposes only\r\n    )\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGVvLWRldGFpbC9tZXRlby1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- meteo de la ville selectionnée -->\\r\\n<!-- meteo de la ville selectionnée -->\\r\\n<div *ngIf=\\\"meteo && meteo.cod === 200\\\">\\r\\n\\r\\n    <nav aria-label=\\\"breadcrumb\\\">\\r\\n      <ol class=\\\"breadcrumb\\\">\\r\\n        <li class=\\\"breadcrumb-item\\\">\\r\\n          <a routerLink=\\\"/\\\">🏠</a>\\r\\n        </li>\\r\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Météo pour {{meteo.name}}</li>\\r\\n      </ol>\\r\\n    </nav>\\r\\n  \\r\\n    <div class=\\\"card\\\" style=\\\"width:300px; margin: 0 auto\\\" v-if=\\\"meteo\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        {{meteo.name}} @{{(meteo.dt)*1000 | date:'H:mm':'0001'}}\\r\\n      </div>\\r\\n      <img class=\\\"card-img-top\\\" src=\\\"https://maps.googleapis.com/maps/api/staticmap?markers={{meteo.coord.lat}},{{meteo.coord.lon}}&zoom=5&size=400x300&scale=2&key=AIzaSyAkmvI9DazzG9p77IShsz_Di7-5Qn7zkcg\\\"\\r\\n        alt=\\\"Card image cap\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h5 class=\\\"card-title\\\">\\r\\n          <i v-bind:class=\\\"'wi wi-owm-day-'+meteo.weather[0].id\\\"></i>\\r\\n          {{meteo.main.temp}}\\r\\n          <i class=\\\"wi wi-celsius\\\"></i>\\r\\n        </h5>\\r\\n        <p class=\\\"card-text\\\">{{meteo.weather[0].description}}</p>\\r\\n      </div>\\r\\n      <ul class=\\\"list-group list-group-flush\\\">\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <i class=\\\"wi wi-cloud\\\"></i> Nuage: {{meteo.clouds.all}}%\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <i class=\\\"wi wi-humidity\\\"></i> Humidité: {{meteo.main.humidity}}%\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <i class=\\\"wi wi-windy\\\"></i> Vent: {{meteo.wind.speed}} km/h\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <i class=\\\"wi wi-sunrise\\\"></i> Levé du soleil: {{(meteo.sys.sunrise)*1000| date:'H:mm':'0001'}} horaire de l'europe centrale  \\r\\n        </li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <i class=\\\"wi wi-sunset\\\"></i>Couché du soleil: {{(meteo.sys.sunset*1000)| date:'H:mm':'0001'}} horaire de l'europe centrale\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"meteo && meteo.cod !== 200\\\">\\r\\n  \\r\\n    {{meteo.message}} (erreur {{meteo.cod}})\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  <hr> {{meteo | json}}\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport {MeteoService} from '../services/meteo.service'\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-meteo-detail',\r\n  templateUrl: './meteo-detail.component.html',\r\n  styleUrls: ['./meteo-detail.component.css']\r\n})\r\nexport class MeteoDetailComponent implements OnInit {\r\n\r\n  meteo : any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private meteoService: MeteoService,\r\n    private location: Location\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getMeteo();\r\n  }\r\n\r\n  getMeteo(): void {\r\n    const name = this.route.snapshot.paramMap.get('name');\r\n    console.log('getmeteo',name);\r\n    this.meteoService.getMeteo(name)\r\n      .then(meteo => this.meteo = meteo)\r\n      .catch(fail => this.meteo = fail);\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21ldGVvL21ldGVvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--app\\\\meteo\\\\meteo.component.html-->\\r\\n<nav aria-label=\\\"breadcrumb\\\">\\r\\n  <ol class=\\\"breadcrumb\\\">\\r\\n    <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">🏠</li>\\r\\n  </ol>\\r\\n</nav>\\r\\n\\r\\n <form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <input type=\\\"search\\\" placeholder=\\\"Ville ...\\\" id=\\\"name\\\" name=\\\"name\\\" \\r\\n        class=\\\"form-control\\\" required minlength=\\\"3\\\"\\r\\n        [(ngModel)]=\\\"city.name\\\" #name=\\\"ngModel\\\">\\r\\n\\r\\n    <span class=\\\"input-group-btn\\\">\\r\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!name.valid\\\">Go!</button>\\r\\n    </span>\\r\\n  </div>\\r\\n  <small *ngIf=\\\"city.name\\\" class=\\\"text-muted\\\">\\r\\n    {{city.name.length}} caractères\\r\\n  </small>\\r\\n\\r\\n  <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n\\r\\n    <div *ngIf=\\\"name.errors.required\\\">\\r\\n      La saisie de la ville est obligatoire\\r\\n    </div>\\r\\n    <div *ngIf=\\\"name.errors.minlength\\\">\\r\\n      Doit contenit au moins 3 caratères.\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<hr/>\\r\\n\\r\\n<!-- Listing des villes, boucle sur l'array : cityList -->\\r\\n<h4>Liste des villes ({{cityList.length}})</h4>\\r\\n<ul class=\\\"list-group\\\">\\r\\n  <li *ngFor=\\\"let city of cityList\\\"  class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\r\\n    <a  routerLink=\\\"/meteo/{{city.name}}\\\" class=\\\"d-block w-100\\\">\\r\\n      {{city.name}}    \\r\\n    </a>\\r\\n    <button (click)=\\\"remove(city)\\\" class=\\\"btn btn-secondary btn-sm pull-right\\\" title=\\\"Supprimer de la liste\\\">&times;</button>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n<div class=\\\"alert alert-primary\\\" role=\\\"alert\\\" *ngIf=\\\"cityList.length==0\\\">\\r\\n  Aucune ville de saisie!\\r\\n</div>\\r\\n\\r\\n\\r\\n<hr/>\\r\\n<p>\\r\\n  Utilisation du filtrer\\r\\n  <strong>json</strong> pour afficher le contenu de la variable\\r\\n  <strong>cityList</strong>\\r\\n</p>\\r\\n\\r\\n<pre>\\r\\n{{cityList | json}}\\r\\n</pre>\\r\\n\\r\\n<!-- fin : Listing des villes -->\\r\\n\\r\\n<hr>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MeteoItem } from '../meteoItem';\r\n\r\n@Component({\r\n  selector: 'app-meteo',\r\n  templateUrl: './meteo.component.html',\r\n  styleUrls: ['./meteo.component.css']\r\n})\r\n\r\nexport class MeteoComponent implements OnInit {\r\n\r\n  city: MeteoItem = {\r\n    name: '',\r\n    id: null,\r\n    weather: null\r\n  };\r\n\r\n  cityList: any;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if( localStorage.cityList !== undefined){\r\n      this.cityList = JSON.parse(localStorage.cityList);\r\n    }else{\r\n      this.cityList = [];\r\n    }\r\n   \r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    if (this.isCityExist(this.city.name) === false) {\r\n      let currentCity = new MeteoItem();\r\n      currentCity.name = this.city.name;\r\n      this.cityList.push(currentCity);\r\n\r\n      this.saveCityList();\r\n\r\n      console.log(this.city.name, 'ajouté à la dans la liste');\r\n    }else{\r\n      console.log(this.city.name, 'existe déjà dans la liste');\r\n    }\r\n\r\n  }\r\n\r\n  remove(_city) {\r\n    // on utilise 'filter' pour retourne une liste avec tous les items ayant un nom différent de _city.name\r\n    this.cityList = this.cityList.filter(item =>\r\n      item.name != _city.name\r\n    );\r\n    this.saveCityList();\r\n  }\r\n\r\n  isCityExist(_cityName) {\r\n\r\n    // la méthode 'filter' retourne une liste contenant tous les items ayant un nom égale à _cityName\r\n    // doc. sur filter : https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/filter\r\n    if (this.cityList.filter(item =>\r\n      item.name.toUpperCase() == _cityName.toUpperCase()\r\n    ).length > 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  saveCityList(){\r\n    localStorage.cityList = JSON.stringify(this.cityList);\r\n  }\r\n\r\n}","export class MeteoItem {\r\n    id: number;\r\n    name: string;\r\n    weather: any\r\n}","import { Injectable } from '@angular/core';\r\nimport { MeteoItem } from '../meteoItem';\r\n//import { Observable } from 'rxjs/Observable';\r\n//import { of } from 'rxjs/observable/of';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MeteoService {\r\n\r\n  constructor() { }\r\n\r\n\r\n  getMeteo(name: string): Promise<any> {\r\n    console.log('from service', name);\r\n\r\n    let m = new MeteoItem();\r\n\r\n    return fetch('https://demo.bilelz.fr/owmap/?q=' + name + '&units=metric&lang=fr&appid=78177275ddc4dee6e2fc43b77d9004b6')\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (json) {\r\n\r\n        // test du code retour\r\n        // 200 = OK\r\n        // 404 = city not found \r\n        if (json.cod === 200) {\r\n          return Promise.resolve(json);\r\n        } else {\r\n          m.weather = json;\r\n\r\n          console.error('Météo introuvable pour ' + name\r\n            + ' (' + json.message + ')');\r\n\r\n          return Promise.reject('Météo introuvable pour ' + name\r\n          + ' (' + json.message + ')');\r\n        }\r\n\r\n      });\r\n\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}